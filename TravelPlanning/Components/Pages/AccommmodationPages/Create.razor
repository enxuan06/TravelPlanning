@page "/accommmodations/create"
@using Microsoft.EntityFrameworkCore
@using TravelPlanning.Domain
@inject IDbContextFactory<TravelPlanning.Data.TravelPlanningContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<div class="container mt-5">
    <div class="text-center mb-4">
        <h1 class="display-4 text-primary">Add a New Accommodation</h1>
        <p class="lead text-muted">Fill in the details below to create a new accommodation entry.</p>
    </div>

    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-body">
                    <h2 class="card-title text-center text-success mb-4">Accommodation Details</h2>
                    <EditForm method="post" Model="Accommmodation" OnValidSubmit="AddAccommmodation" FormName="create" Enhance>
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger" role="alert" />

                        <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="name" class="form-label">Name:</label>
                            <InputText id="name" @bind-Value="Accommmodation.Name" class="form-control" />
                            <ValidationMessage For="() => Accommmodation.Name" class="text-danger" />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="address" class="form-label">Address:</label>
                            <InputText id="address" @bind-Value="Accommmodation.Address" class="form-control" />
                            <ValidationMessage For="() => Accommmodation.Address" class="text-danger" />
                        </div>
                        </div>

                        <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="startdate" class="form-label">StartDate:</label>
                            <InputDate id="startdate" @bind-Value="Accommmodation.StartDate" class="form-control" />
                            <ValidationMessage For="() => Accommmodation.StartDate" class="text-danger" />
                        </div>
                            <div class="col-md-6 mb-3">
                                <label for="enddate" class="form-label">EndDate:</label>
                            <InputDate id="enddate" @bind-Value="Accommmodation.EndDate" class="form-control" />
                            <ValidationMessage For="() => Accommmodation.EndDate" class="text-danger" />
                        </div>
                        </div>

                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="type" class="form-label">Type:</label>
                            <InputText id="type" @bind-Value="Accommmodation.Type" class="form-control" placeholder="E.g., Apartment,AirBnb"/>
                            <ValidationMessage For="() => Accommmodation.Type" class="text-danger" />
                        </div>
                            <div class="col-md-6 mb-3">
                                <label for="pricepernight" class="form-label">PricePerNight:</label>
                            <InputNumber id="pricepernight" @bind-Value="Accommmodation.PricePerNight" class="form-control" />
                            <ValidationMessage For="() => Accommmodation.PricePerNight" class="text-danger" />
                        </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="datecreated" class="form-label">DateCreated:</label>
                            <InputDate id="datecreated" @bind-Value="Accommmodation.DateCreated" class="form-control" />
                            <ValidationMessage For="() => Accommmodation.DateCreated" class="text-danger" />
                        </div>
                            <div class="col-md-6 mb-3">
                                <label for="dataupdated" class="form-label">DataUpdated:</label>
                            <InputDate id="dataupdated" @bind-Value="Accommmodation.DataUpdated" class="form-control" />
                            <ValidationMessage For="() => Accommmodation.DataUpdated" class="text-danger" />
                        </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="createdby" class="form-label">CreatedBy:</label>
                            <InputText id="createdby" @bind-Value="Accommmodation.CreatedBy" class="form-control" />
                            <ValidationMessage For="() => Accommmodation.CreatedBy" class="text-danger" />
                        </div>
                            <div class="col-md-6 mb-3">
                                <label for="updatedby" class="form-label">UpdatedBy:</label>
                            <InputText id="updatedby" @bind-Value="Accommmodation.UpdatedBy" class="form-control" />
                            <ValidationMessage For="() => Accommmodation.UpdatedBy" class="text-danger" />
                        </div>
                        </div>
                        <div class="text-center mt-4">
                            <button type="submit" class="btn btn-success btn-lg">Create Accommodation</button>
                        </div>
                    </EditForm>
                </div>
            </div>
          </div>
    </div>
</div>

<div>
    <a href="/accommmodations">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Accommmodation Accommmodation { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddAccommmodation()
    {
        using var context = DbFactory.CreateDbContext();
        context.Accommmodation.Add(Accommmodation);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/accommmodations");
    }
}
