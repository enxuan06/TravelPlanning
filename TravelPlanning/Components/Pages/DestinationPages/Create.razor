@page "/destinations/create"
@using Microsoft.EntityFrameworkCore
@using TravelPlanning.Domain
@inject IDbContextFactory<TravelPlanning.Data.TravelPlanningContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Destination</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Destination" OnValidSubmit="AddDestination" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Destination.Name" class="form-control" /> 
                <ValidationMessage For="() => Destination.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="country" class="form-label">Country:</label> 
                <InputText id="country" @bind-Value="Destination.Country" class="form-control" /> 
                <ValidationMessage For="() => Destination.Country" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="startdate" class="form-label">StartDate:</label> 
                <InputDate id="startdate" @bind-Value="Destination.StartDate" class="form-control" /> 
                <ValidationMessage For="() => Destination.StartDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="enddate" class="form-label">EndDate:</label> 
                <InputDate id="enddate" @bind-Value="Destination.EndDate" class="form-control" /> 
                <ValidationMessage For="() => Destination.EndDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="activityid" class="form-label">ActivityId:</label> 
                <InputNumber id="activityid" @bind-Value="Destination.ActivityId" class="form-control" /> 
                <ValidationMessage For="() => Destination.ActivityId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="transportid" class="form-label">TransportId:</label> 
                <InputNumber id="transportid" @bind-Value="Destination.TransportId" class="form-control" /> 
                <ValidationMessage For="() => Destination.TransportId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="accomid" class="form-label">AccomId:</label> 
                <InputNumber id="accomid" @bind-Value="Destination.AccomId" class="form-control" /> 
                <ValidationMessage For="() => Destination.AccomId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="datecreated" class="form-label">DateCreated:</label> 
                <InputDate id="datecreated" @bind-Value="Destination.DateCreated" class="form-control" /> 
                <ValidationMessage For="() => Destination.DateCreated" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="dataupdated" class="form-label">DataUpdated:</label> 
                <InputDate id="dataupdated" @bind-Value="Destination.DataUpdated" class="form-control" /> 
                <ValidationMessage For="() => Destination.DataUpdated" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="createdby" class="form-label">CreatedBy:</label> 
                <InputText id="createdby" @bind-Value="Destination.CreatedBy" class="form-control" /> 
                <ValidationMessage For="() => Destination.CreatedBy" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="updatedby" class="form-label">UpdatedBy:</label> 
                <InputText id="updatedby" @bind-Value="Destination.UpdatedBy" class="form-control" /> 
                <ValidationMessage For="() => Destination.UpdatedBy" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/destinations">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Destination Destination { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddDestination()
    {
        using var context = DbFactory.CreateDbContext();
        context.Destination.Add(Destination);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/destinations");
    }
}
