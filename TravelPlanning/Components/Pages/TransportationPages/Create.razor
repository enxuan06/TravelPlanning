@page "/transportations/create"
@using Microsoft.EntityFrameworkCore
@using TravelPlanning.Domain
@inject IDbContextFactory<TravelPlanning.Data.TravelPlanningContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create Transportation</PageTitle>

<div class="container mt-5">
    <div class="text-center mb-4">
        <h1 class="display-4 text-primary">Add New Transportation</h1>
        <p class="lead text-muted">Fill in the details below to create a new transportation entry.</p>
    </div>

    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-body">
                    <h2 class="card-title text-center text-success mb-4">Transportation Details</h2>
                    <EditForm method="post" Model="Transportation" OnValidSubmit="AddTransportation" FormName="create" Enhance>
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger" role="alert" />

                        <div class="mb-3">
                            <label for="type" class="form-label">Type:</label>
                            <InputText id="type" @bind-Value="Transportation.Type" class="form-control" placeholder="E.g., Bus" />
                            <ValidationMessage For="() => Transportation.Type" class="text-danger" />
                        </div>
                        <div class="mb-3">
                            <label for="startlocation" class="form-label">Start Location:</label>
                            <InputText id="startlocation" @bind-Value="Transportation.StartLocation" class="form-control" placeholder="E.g., Station A" />
                            <ValidationMessage For="() => Transportation.StartLocation" class="text-danger" />
                        </div>
                        <div class="mb-3">
                            <label for="endlocation" class="form-label">End Location:</label>
                            <InputText id="endlocation" @bind-Value="Transportation.EndLocation" class="form-control" placeholder="E.g., Station B" />
                            <ValidationMessage For="() => Transportation.EndLocation" class="text-danger" />
                        </div>
                        <div class="mb-3">
                            <label for="cost" class="form-label">Cost:</label>
                            <InputNumber id="cost" @bind-Value="Transportation.Cost" class="form-control" />
                            <ValidationMessage For="() => Transportation.Cost" class="text-danger" />
                        </div>
                        <div class="mb-3">
                            <label for="datecreated" class="form-label">Date Created:</label>
                            <InputDate id="datecreated" @bind-Value="Transportation.DateCreated" class="form-control" />
                            <ValidationMessage For="() => Transportation.DateCreated" class="text-danger" />
                        </div>
                        <div class="mb-3">
                            <label for="createdby" class="form-label">Created By:</label>
                            <InputText id="createdby" @bind-Value="Transportation.CreatedBy" class="form-control" />
                            <ValidationMessage For="() => Transportation.CreatedBy" class="text-danger" />
                        </div>

                        <div class="text-center mt-4">
                            <button type="submit" class="btn btn-success btn-lg">Create Transportation</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>

    <div class="text-center mt-4">
        <a href="/transportations" class="btn btn-outline-secondary">Back to List</a>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private Transportation Transportation { get; set; } = new();

    private async Task AddTransportation()
    {
        using var context = DbFactory.CreateDbContext();
        context.Transportation.Add(Transportation);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/transportations");
    }
}
