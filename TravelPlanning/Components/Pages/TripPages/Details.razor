@page "/trips/details"
@using Microsoft.EntityFrameworkCore
@using TravelPlanning.Domain
@inject IDbContextFactory<TravelPlanning.Data.TravelPlanningContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>
<h1>Details</h1>

@if (trip is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container-fluid py-4">

        <div class="row g-4">

            <!-- Main Trip Details -->

            <div class="col-md-7">
                <div class="card h-70 shadow-sm">
                    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                        <h2 class="mb-0">@trip.TripName</h2>
                        <div class="btn-group">
                            <a href="@($"/trips/edit?id={trip.Id}")" class="btn btn-sm btn-light">
                                <i class="bi bi-pencil me-1"></i>Edit
                            </a>

                            <a href="/trips" class="btn btn-sm btn-outline-light">

                                <i class="bi bi-arrow-left me-1"></i>Back to List
                            </a>
                        </div>
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <dl class="row">

                                    <dt class="col-5 text-muted">Country</dt>
                                    <dd class="col-7">@trip.Country</dd>

                                    <dt class="col-5 text-muted">Start Date</dt>
                                    <dd class="col-7">@trip.StartDate.ToString("dddd, MMMM dd, yyyy")</dd>

                                    <dt class="col-5 text-muted">End Date</dt>
                                    <dd class="col-7">@trip.EndDate.ToString("dddd, MMMM dd, yyyy")</dd>
                                </dl>
                            </div>

                            <div class="col-md-6">

                                <dl class="row" hidden>

                                    <dt class="col-5 text-muted">Created On</dt>
                                    <dd class="col-7">@trip.DateCreated.ToString("MM/dd/yyyy HH:mm")</dd>

                                    <dt class="col-5 text-muted">Last Updated</dt>
                                    <dd class="col-7">@trip.DataUpdated.ToString("MM/dd/yyyy HH:mm")</dd>

                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Timeline - Right Side -->
            <div class="col-md-4">
                <div class="timeline-container">
                    @if (flight != null)
                    {
                        @foreach (var flight in flight)
                        {
                            <div class="timeline-item">
                                <div class="timeline-icon">
                                    <a href="/flights/edit/@flight.Id/@flight.TripId">🛫</a>
                                </div>
                                <div class="timeline-content">
                                    <h6>@flight.DepartureDate.ToShortDateString()</h6>
                                    <details>
                                        <summary>Airline: @flight.AirlineName</summary>
                                        <p> Time:@flight.DepartureDate </p>
                                    </details>
                                </div>
                            </div>
                        }
                    }
                    @if (Lodging != null)
                    {
                        @foreach (var lodging in Lodging)
                        {
                            <div class="timeline-item">
                                <div class="timeline-icon">
                                    <a href="/lodgings/edit/@lodging.Id/@lodging.TripId">🛏️</a>
                                </div>
                                <div class="timeline-content">
                                    <h6>@lodging.HotelName</h6>
                                    <details>
                                        <summary>Check-in: @lodging.CheckInDate.ToShortDateString()</summary>
                                        <p>
                                            Name:@lodging.HotelName<br>
                                            Address: @lodging.Address<br>
                                            Check-out: @lodging.CheckOutDate.ToShortDateString()<br>
                                        </p>
                                    </details>
                                </div>
                            </div>
                        }
                    }
                    @if (activity != null)
                    {
                        @foreach (var activity in activity)
                        {
                            <div class="timeline-item">
                                <div class="timeline-icon">
                                    <a href="/activities/edit/@activity.Id/@activity.TripId">🎮</a>
                                </div>
                                <div class="timeline-content">
                                    <h6>@activity.ActivityName</h6>
                                    <details>
                                        <summary>Address: @activity.Address</summary>
                                        <p>
                                            Description: @activity.Description
                                        </p>
                                    </details>
                                </div>
                            </div>
                        }
                    }
                    @if (restaurant != null)
                    {
                        @foreach (var restaurant in restaurant)
                        {
                            <div class="timeline-item">
                                <div class="timeline-icon">
                                    <a href="/restaurants/edit/@restaurant.Id/@restaurant.TripId">🍽️</a>
                                </div>
                                <div class="timeline-content">
                                    <h6>@restaurant.ResturantName</h6>
                                    <details>
                                        <summary>Date: @restaurant.DateVisited.ToShortDateString()</summary>
                                        <p>
                                            Address: @restaurant.Address
                                        </p>
                                    </details>
                                </div>
                            </div>
                        }
                    }


                    <div class="timeline-add-plan">
                        <a href="/activities/create/@trip.Id" class="btn btn-primary">🕹️ Activities</a>
                        <a href="/flights/create/@trip.Id" class="btn btn-primary">✈️ Flight</a>
                        <a href="/lodgings/create/@trip.Id" class="btn btn-primary">🏨 Lodging</a>
                        <a href="/restaurants/create/@trip.Id" class="btn btn-primary">🍽️ Restaurant</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private Trip? trip;
    [SupplyParameterFromQuery]
    private int Id { get; set; }
    private List<Lodging>? Lodging;
    private List<Activity>? activity;
    private List<Flight>? flight;
    private List<Restaurant>? restaurant;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        trip = await context.Trip.FirstOrDefaultAsync(m => m.Id == Id);

        // Get all activity for this trip
        activity = await context.Activity
           .Where(a => a.TripId == Id)
           .OrderBy(a => a.Id)
           .ToListAsync();

        // Get all flight for this trip
        flight = await context.Flight
            .Where(a => a.TripId == Id)
            .OrderBy(a => a.DepartureDate)
            .ToListAsync();

        // Get all lodging for this trip
        Lodging = await context.Lodging
            .Where(a => a.TripId == Id)
            .OrderBy(a => a.CheckInDate)
            .ToListAsync();

        // Get all restaurant for this trip
        restaurant = await context.Restaurant
            .Where(a => a.TripId == Id)
            .OrderBy(a => a.DateVisited)
            .ToListAsync();

        if (trip is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}