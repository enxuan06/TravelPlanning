@page "/itineraryplans/create"
@using Microsoft.EntityFrameworkCore
@using TravelPlanning.Domain
@inject IDbContextFactory<TravelPlanning.Data.TravelPlanningContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Start Planning</h1>
<hr />

<h5>Commonly Used</h5>
<a href="/activities/create" class="button selection ">  🕹️ Activities </a>
<a href=" /transportations/create"  class="button selection"> 🚃 Transportation </a>
<a href="/accommmodations/create" class="button selection">  🏨 Accommodation </a>
<hr />
<div class="container-fluid bg-light py-5">
    <div class="row jusitfy-content-center">
        <div class="col-md-10 col-lg-8">
            <div class="card shadow lg">
                <div class="card-header bg-primrary text-white d-flex align-items-center">
                    <i class="fas fa-route me-3 fa-2x"></i>
                    <h3 class="mb-0"> Itinerary Plan</h3>
                </div>
            </div>
            <div class="card-body ">
                <EditForm method="post" Model="ItineraryPlan" OnValidSubmit="AddItineraryPlan" FormName="create" Enhance>
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger" role="alert" />
                    <div class=" col-md 6 mb-3">
                        <label for="activities" class="form-label">Activities:</label>
                        <InputText id="activities" @bind-Value="ItineraryPlan.Activities" class="form-control" />
                        <ValidationMessage For="() => ItineraryPlan.Activities" class="text-danger" />
                    </div>
                    <div class="col-md 6 mb-3">
                        <label for="budget" class="form-label">Budget:</label>
                        <InputNumber id="budget" @bind-Value="ItineraryPlan.Budget" class="form-control" />
                        <ValidationMessage For="() => ItineraryPlan.Budget" class="text-danger" />
                    </div>
                    <div class="col-md 6 mb-3">
                        <label for="userid" class="form-label">UserId:</label>
                        <InputNumber id="userid" @bind-Value="ItineraryPlan.UserId" class="form-control" />
                        <ValidationMessage For="() => ItineraryPlan.UserId" class="text-danger" />
                    </div>
                    <div class="col-md 6 mb-3">
                        <label for="destinationid" class="form-label">DestinationId:</label>
                        <InputNumber id="destinationid" @bind-Value="ItineraryPlan.DestinationId" class="form-control" />
                        <ValidationMessage For="() => ItineraryPlan.DestinationId" class="text-danger" />
                    </div>
                    <div class="col-md 6 mb-3">
                        <label for="datecreated" class="form-label">DateCreated:</label>
                        <InputDate id="datecreated" @bind-Value="ItineraryPlan.DateCreated" class="form-control" />
                        <ValidationMessage For="() => ItineraryPlan.DateCreated" class="text-danger" />
                    </div>
                    <div class="col-md 6 mb-3">
                        <label for="dataupdated" class="form-label">DataUpdated:</label>
                        <InputDate id="dataupdated" @bind-Value="ItineraryPlan.DataUpdated" class="form-control" />
                        <ValidationMessage For="() => ItineraryPlan.DataUpdated" class="text-danger" />
                    </div>
                    <div class="col-md 6 mb-3">
                        <label for="createdby" class="form-label">CreatedBy:</label>
                        <InputText id="createdby" @bind-Value="ItineraryPlan.CreatedBy" class="form-control" />
                        <ValidationMessage For="() => ItineraryPlan.CreatedBy" class="text-danger" />
                    </div>
                    <div class="col-md 6 mb-3">
                        <label for="updatedby" class="form-label">UpdatedBy:</label>
                        <InputText id="updatedby" @bind-Value="ItineraryPlan.UpdatedBy" class="form-control" />
                        <ValidationMessage For="() => ItineraryPlan.UpdatedBy" class="text-danger" />
                    </div>
                    <button type="submit" class="btn btn-primary">Create</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

<div>
    <a href="/itineraryplans">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private ItineraryPlan ItineraryPlan { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddItineraryPlan()
    {
        using var context = DbFactory.CreateDbContext();
        context.ItineraryPlan.Add(ItineraryPlan);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/itineraryplans");
    }
}
