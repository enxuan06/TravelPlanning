@page "/flights/create"
@page "/flights/create/{TripId:int}"

@using Microsoft.EntityFrameworkCore
@using TravelPlanning.Domain
@inject IDbContextFactory<TravelPlanning.Data.TravelPlanningContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>
<div class="background-container">


<h1 style ="color: black;">Flight</h1>

<div class="row justify-content-center">
    <div class="col-md-8">
            <div class="card shadow">
            <div class="card-body">
               <h2 class="card-title text-center text-success mb-4">Flight Details</h2>
               <EditForm method="post" Model="Flight" OnValidSubmit="AddFlight" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="row">
            <div class="mb-3" hidden>
                <label for="tripid" class="form-label">TripId:</label> 
                <InputNumber id="tripid" @bind-Value="Flight.TripId" class="form-control" /> 
                <ValidationMessage For="() => Flight.TripId" class="text-danger" /> 
            </div>
            <div class="col-md-6 mb-3">
                <label for="airlinename" class="form-label">AirlineName:</label> 
                <InputText id="airlinename" @bind-Value="Flight.AirlineName" class="form-control" /> 
                <ValidationMessage For="() => Flight.AirlineName" class="text-danger" /> 
            </div>
            <div class="col-md-6 mb-3">
                <label for="departuredate" class="form-label">DepartureDate:</label> 
                <InputDate id="departuredate" @bind-Value="Flight.DepartureDate" class="form-control" min="@DateTime.Today.ToString("yyyy-MM-dd")" />
                <ValidationMessage For="() => Flight.DepartureDate" class="text-danger" /> 
            </div>        
            <div class="mb-3" hidden>
                <label for="datecreated" class="form-label">DateCreated:</label> 
                <InputDate id="datecreated" @bind-Value="Flight.DateCreated" class="form-control" /> 
                <ValidationMessage For="() => Flight.DateCreated" class="text-danger" /> 
            </div>        
            <div class="mb-3" hidden>
                <label for="dataupdated" class="form-label">DataUpdated:</label> 
                <InputDate id="dataupdated" @bind-Value="Flight.DataUpdated" class="form-control" /> 
                <ValidationMessage For="() => Flight.DataUpdated" class="text-danger" /> 
            </div>  
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
            <div class="text-center mt-4">
                <a href="/flights/@TripId">View Trip Flight</a>
                <br />
                <a href="/plan/@TripId">Cancel</a>
            </div>
            </div>
         </div>
      </div>
   </div>
</div>
   


@code {
    [Parameter]
    public int TripId { get; set; }

    [SupplyParameterFromForm]
    private Flight Flight { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        // Set default dates
        Flight.DateCreated = DateTime.UtcNow;
        Flight.DataUpdated = DateTime.UtcNow;

    

        using var context = DbFactory.CreateDbContext();

        {
            // Verify the trip
            var trip = await context.Trip
                .FirstOrDefaultAsync(t => t.Id == TripId);

            if (trip != null)
            {
                // Trip doesn't exist or doesn't belong to this user
                Flight.TripId = trip.Id;
            }

            else
            {
                NavigationManager.NavigateTo("/error", true);
                return;
            }
        }
    }

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddFlight()
    {
        using var context = DbFactory.CreateDbContext();
        context.Flight.Add(Flight);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo($"/trips/details?id={Flight.TripId}");
    }
}
