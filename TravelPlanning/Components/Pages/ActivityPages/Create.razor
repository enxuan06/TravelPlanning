@page "/activities/create"
@using Microsoft.EntityFrameworkCore
@using TravelPlanning.Domain
@inject IDbContextFactory<TravelPlanning.Data.TravelPlanningContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create Activities</h1>

<div class="container mt-5">
    <div class="text-center mb-4">
        <h1 class="display-4 text-primary">Add a New Accommodation</h1>
        <p class="lead text-muted">Fill in the details below to create a new activities entry.</p>
    </div>

 <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-body">
                    <h2 class="card-title text-center text-success mb-4">Acitivities Details</h2>
                    <EditForm method="post" Model="Activity" OnValidSubmit="AddActivity" FormName="create" Enhance>
                        <DataAnnotationsValidator />
                        <ValidationSummary class="text-danger" role="alert" />

                         <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="name" class="form-label">Name:</label>
                            <InputText id="name" @bind-Value="Activity.Name" class="form-control" placeholder="E.g., Waterboarding" />
                            <ValidationMessage For="() => Activity.Name" class="text-danger" />
                        </div>
                            <div class="col-md-6 mb-3">
                                <label for="location" class="form-label">Location:</label>
                                <InputText id="location" @bind-Value="Activity.Location" class="form-control" placeholder="E.g., Okutama,Japan" />
                            <ValidationMessage For="() => Activity.Location" class="text-danger" />
                        </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="type" class="form-label">Type:</label>
                            <InputText id="type" @bind-Value="Activity.Type" class="form-control" placeholder="E.g., Sports" />
                            <ValidationMessage For="() => Activity.Type" class="text-danger" />
                        </div>
                            <div class="col-md-6 mb-3">
                                <label for="duration" class="form-label">Duration:</label>
                            <InputNumber id="duration" @bind-Value="Activity.Duration" class="form-control" placeholder="E.g., 2 hours"/>
                            <ValidationMessage For="() => Activity.Duration" class="text-danger" />
                        </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="datecreated" class="form-label">DateCreated:</label>
                            <InputDate id="datecreated" @bind-Value="Activity.DateCreated" class="form-control" />
                            <ValidationMessage For="() => Activity.DateCreated" class="text-danger" />
                        </div>
                            <div class="col-md-6 mb-3">
                                <label for="dataupdated" class="form-label">DataUpdated:</label>
                            <InputDate id="dataupdated" @bind-Value="Activity.DataUpdated" class="form-control" />
                            <ValidationMessage For="() => Activity.DataUpdated" class="text-danger" />
                        </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="createdby" class="form-label">CreatedBy:</label>
                            <InputText id="createdby" @bind-Value="Activity.CreatedBy" class="form-control" />
                            <ValidationMessage For="() => Activity.CreatedBy" class="text-danger" />
                        </div>
                            <div class="col-md-6 mb-3">
                                <label for="updatedby" class="form-label">UpdatedBy:</label>
                            <InputText id="updatedby" @bind-Value="Activity.UpdatedBy" class="form-control" />
                            <ValidationMessage For="() => Activity.UpdatedBy" class="text-danger" />
                        </div>
                        </div>

                        <div class="text-center mt-4">
                            <button type="submit" class="btn btn-success btn-lg">Create Accommodation</button>
                        </div>
                    </EditForm>
                 </div>
            </div>
         </div>
   </div>
</div>

<div>
    <a href="/activities">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Activity Activity { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddActivity()
    {
        using var context = DbFactory.CreateDbContext();
        context.Activity.Add(Activity);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/activities");
    }
}
