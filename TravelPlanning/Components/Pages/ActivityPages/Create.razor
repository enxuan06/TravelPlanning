@page "/activities/create"
@using Microsoft.EntityFrameworkCore
@using TravelPlanning.Domain
@inject IDbContextFactory<TravelPlanning.Data.TravelPlanningContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Activity</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Activity" OnValidSubmit="AddActivity" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="tripid" class="form-label">TripId:</label> 
                <InputNumber id="tripid" @bind-Value="Activity.TripId" class="form-control" /> 
                <ValidationMessage For="() => Activity.TripId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="activityname" class="form-label">ActivityName:</label> 
                <InputText id="activityname" @bind-Value="Activity.ActivityName" class="form-control" /> 
                <ValidationMessage For="() => Activity.ActivityName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="description" class="form-label">Description:</label> 
                <InputText id="description" @bind-Value="Activity.Description" class="form-control" /> 
                <ValidationMessage For="() => Activity.Description" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="address" class="form-label">Address:</label> 
                <InputText id="address" @bind-Value="Activity.Address" class="form-control" /> 
                <ValidationMessage For="() => Activity.Address" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="datecreated" class="form-label">DateCreated:</label> 
                <InputDate id="datecreated" @bind-Value="Activity.DateCreated" class="form-control" /> 
                <ValidationMessage For="() => Activity.DateCreated" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="dataupdated" class="form-label">DataUpdated:</label> 
                <InputDate id="dataupdated" @bind-Value="Activity.DataUpdated" class="form-control" /> 
                <ValidationMessage For="() => Activity.DataUpdated" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/activities">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Activity Activity { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddActivity()
    {
        using var context = DbFactory.CreateDbContext();
        context.Activity.Add(Activity);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/activities");
    }
}
