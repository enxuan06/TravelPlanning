@layout TravelPlanning.Components.Layout.EmptyLayout
@page "/Account/ConfirmEmail"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.AspNetCore.WebUtilities
@using TravelPlanning.Data


@inject UserManager<TravelPlanningUser> UserManager
@inject NavigationManager NavigationManager


<PageTitle>Confirm email</PageTitle>

<h1>Confirm email</h1>

<StatusMessage Message="@statusMessage" />

<!-- Add an image here -->
<img src="Images/Takodachi_confirmemail.png" alt="Email confirmed" />

@code {
    private string? statusMessage;

    [SupplyParameterFromQuery]
    private string? UserId { get; set; }

    [SupplyParameterFromQuery]
    private string? Code { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (UserId is null || Code is null)
        {
            statusMessage = "Error: Invalid email confirmation link.";
            return;
        }

        try
        {
            var user = await UserManager.FindByIdAsync(UserId);
            if (user == null)
            {
                statusMessage = "Error: Unable to find user.";
                return;
            }

            Code = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(Code));
            var result = await UserManager.ConfirmEmailAsync(user, Code);

            if (result.Succeeded)
            {
                statusMessage = "Thank you for confirming your email. You can now close this window.";

                // Create a temporary connection to notify other tabs
                var hubConnection = new HubConnectionBuilder()
                    .WithUrl(NavigationManager.ToAbsoluteUri("/emailConfirmationHub"))
                    .Build();

                await hubConnection.StartAsync();
                await hubConnection.InvokeAsync("EmailConfirmed", user.Email);
                await hubConnection.DisposeAsync();
            }
            else
            {
                statusMessage = $"Error confirming your email. {string.Join(", ", result.Errors.Select(e => e.Description))}";
            }
        }
        catch (Exception ex)
        {
            statusMessage = "An error occurred while confirming your email.";
            Console.WriteLine($"Confirmation Error: {ex.Message}");
        }
    }
}
