@inherits LayoutComponentBase
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.AspNetCore.Identity
@using TravelPlanning.Data

@inject NavigationManager NavigationManager
@inject SignInManager<TravelPlanningUser> SignInManager
@inject UserManager<TravelPlanningUser> UserManager
@implements IAsyncDisposable

<div class="page">
    
        <NavMenu />

    <main>
        <div class="top-row px-4">
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

    
@code {
    private HubConnection? hubConnection;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/emailConfirmationHub"))
            .WithAutomaticReconnect()
            .Build();

        hubConnection.On<string>("EmailConfirmed", async (email) =>
        {
            try
            {
                var user = await UserManager.FindByEmailAsync(email);
                if (user != null)
                {
                    await SignInManager.SignInAsync(user, isPersistent: false);
                    NavigationManager.NavigateTo("/");
                    StateHasChanged();
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error handling email confirmation: {ex.Message}");
            }
        });

        try
        {
            await hubConnection.StartAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error starting SignalR connection: {ex.Message}");
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}

